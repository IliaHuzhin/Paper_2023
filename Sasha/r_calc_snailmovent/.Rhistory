getwd(Text/Paper_2023/Sasha/r_calc_snailmovent)
getwd()
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
getwd()
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
getwd()
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
View(snail_move)
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
getwd()
getwd("H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data")
getwd(H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data)
getwd(H/Text/Paper_2023/Sasha/r_calc_snailmovent/Data)
getwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
library(readxl)
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
View(snail_move)
library(ggplot2)
library(readxl)
library(ggplot2)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
Litt<-pel[pel$Species == "Littorina",]
Litt<-snail_move[snail_move$Species == "Littorina",]
View(Litt)
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Gidrobia"]
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Gidrobia"]
Hydr <- snail_move[snail_move$Species == "Gidrobia"]
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Gidrobia"]
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Gidr"]
Gidr <- snail_move[snail_move$Species == "Gidr"]
Hydr <- snail_move[snail_move$Species == "Hydrobia"]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = species, fill = Status)) + geom_boxplot() + scale_fill_manual(values = c ("gray40","white")) + theme_bw()
library(ggplot2)
ggplot(snail_move, aes(y = Turn_time, x = species, fill = Status)) + geom_boxplot() + scale_fill_manual(values = c ("gray40","white")) + theme_bw()
ggplot(snail_move, aes(y = Turn_time, x = species, fill = status)) + geom_boxplot() + scale_fill_manual(values = c ("gray40","white")) + theme_bw()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = status)) + geom_boxplot() + scale_fill_manual(values = c ("gray40","white")) + theme_bw()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = status)) + geom_boxplot()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Aperture_size, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Aperture_size, x = Species, fill = Status)) + geom_point() + theme_bw()
ggplot(snail_move, aes(y = Aperture_size, x = Status, fill = Aperture_size)) + geom_point() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_point() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
View(Litt)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
Litt <- snail_move[snail_move$Species == "Littorina",]
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
Litt <- snail_move[snail_move$Species$Status_sadok == "Littorina",]
View(Litt)
Litt_Sadok <-Litt[Litt$Status_Sadok == "NA"]
Litt_Sadok <-Litt[Litt$Status_Sadok == "NA",]
View(Litt_Sadok)
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
Litt_Sadok <-Litt[Litt$Status_Sadok == "0",]
View(Litt_Sadok)
Litt <- snail_move[snail_move$Species == "Littorina",]
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Litt_Sadok <-Litt[Litt$Status_Sadok == "0",]
View(Litt)
View(Litt_Sadok)
View(Litt_Sadok)
View(Litt_Sadok)
View(Litt_Sadok)
View(Litt_Sadok)
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
View(Litt_Sadok)
ggplot(snail_move, aes(y = Squares, x = Aperture_size, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Aperture_size, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Aperture_size, x = Trek_lenght, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Aperture_size, x = Trek_lenght, fill = Status)) + geom_point() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw()
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
library(readxl)
library(ggplot2)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Litt, aes(y = Trek_lenght, x = Byss_nit, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Byss_nit, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Square, x = Byss_nit, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Squares, x = Byss_nit, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Squares, x = Byss_nit, fill = Status)) + geom_boxplot() + theme_bw()
library(readxl)
library(ggplot2)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
View(snail_move)
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Barbar_Litt <- Litt[Litt$Barbarity == "Barbar",]
Barbar_Hydr <- Hydr[Hydr$Barbarity == "Barbar",]
Domestic_Litt <- Litt[Litt$Barbarity == "domestic",]
Domestic_Hydr <- Hydr[Hydr$Barbarity == "domestic",]
View(snail_move)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Barbar_Litt <- Litt[Litt$Barbarity == "Barbar",]
Barbar_Hydr <- Hydr[Hydr$Barbarity == "Barbar",]
Domestic_Litt <- Litt[Litt$Barbarity == "domestic",]
Domestic_Hydr <- Hydr[Hydr$Barbarity == "domestic",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
View(snail_move)
Barbar <- snail_move[snail_move$Barbarity == "Barbar",]
Domestic <- snail_move[snail_move$Barbarity == "Domestic",]
View(Domestic)
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
Barbar <- snail_move[snail_move$Barbarity == "Barbar",]
Domestic <- snail_move[snail_move$Barbarity == "Domestic",]
View(Domestic)
View(Barbar)
Domestic <- snail_move[snail_move$Barbarity == "domestic",]
View(Domestic)
ggplot(Barbar, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Barbar_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
snail_move
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Hydr
Barbar <- snail_move[snail_move$Barbarity == "Barbar",]
Domestic <- snail_move[snail_move$Barbarity == "domestic",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
snail_move$Speed <- snail_move$Trek_lenght/snail_move$active_time
snail_move$Speed
ggplot(snail_move, aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
library(dplyr)
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move$active_time
snail_move$Trek_lenght
snail_move$Speed
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Trek_lenght, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Speed, fill = Status)) +
geom_point() +
theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Speed, color = Status)) +
geom_point() +
theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Speed, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Speed, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw() +
geom_smooth(method = "lm")
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Squares, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw() +
geom_smooth(method = "lm")
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Squares/active_time, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw() +
geom_smooth(method = "lm")
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares/active_time, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Sd, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
summary(model_Angle_Increment_Litt)
model_Angle_Increment_Hydr <- lm(N_pellets ~ Angle_Increment * Status, data = Hydr)
getwd()
library(readxl)
pel <- read_excel("Gastropoda_pellets_2022.xlsx", na = "NA")
library(ggplot2)
library(broom)
library(clipr)
Litt<-pel[pel$Species == "Littorina",]
summary(model_Angle_Increment_Hydr)
summary(model_Angle_Increment_Hydr)
str(FLP)
getwd()
library(readxl)
pel <- read_excel("Gastropoda_pellets_2022 ????.xlsx", na = "NA")
library(ggplot2)
library (haven)
library(dplyr)
ggplot(pel, aes(x = Status, y = N_pellets, fill = Status)) + geom_boxplot() + facet_grid(~Sample~Species)
FLP <- pel %>% filter(Species == "Littorina") %>% filter(Status == "Free") %>% pull(N_pellets)
CLP <-  pel %>% filter(Species == "Littorina") %>% filter(Status == "Captured") %>% pull(N_pellets)
FHP <- pel %>% filter(Species == "Hydrobia") %>% filter(Status == "Free") %>% pull(N_pellets)
CHP <- pel %>% filter(Species == "Hydrobia") %>% filter(Status == "Captured") %>% pull(N_pellets)
FLA <- pel %>% filter(Species == "Littorina") %>% filter(Status == "Free") %>% pull(Angle_Increment)
CLA <- pel %>% filter(Species == "Littorina") %>% filter(Status == "Captured") %>% pull(Angle_Increment)
FHA <- pel %>% filter(Species == "Hydrobia") %>% filter(Status == "Free") %>% pull(Angle_Increment)
one.way <- anova(Hydrobia ~ captured, data = snail_move)
library(readxl)
library(ggplot2)
library(dplyr)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
snail_move$Speed <- snail_move$Trek_lenght/snail_move$active_time
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Sd, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Trek_lenght, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Squares/active_time, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw() +
geom_smooth(method = "lm")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Barbar <- snail_move[snail_move$Barbarity == "Barbar",]
Domestic <- snail_move[snail_move$Barbarity == "domestic",]
Barbar_Litt <- Litt[Litt$Barbarity == "Barbar",]
Barbar_Hydr <- Hydr[Hydr$Barbarity == "Barbar",]
Domestic_Litt <- Litt[Litt$Barbarity == "domestic",]
Domestic_Hydr <- Hydr[Hydr$Barbarity == "domestic",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Barbar_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
one.way <- anova(Hydrobia ~ captured, data = snail_move)
one.way <- anova(Hydrobia ~ captured, data = snail_move)
library(anova)
library(Formula)
setwd('H:/Text/Paper_2023/Sasha/r_calc_snailmovent/Data')
snail_move <- read_excel("snail_movement_2023.xlsx", na = "NA")
snail_move$Speed <- snail_move$Trek_lenght/snail_move$active_time
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Speed, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Squares, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Sd, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(y = Trek_lenght, x = Species, fill = Status)) +
geom_boxplot() + theme_bw()
snail_move %>%
filter(Barbarity == "Barbar") %>%
ggplot(., aes(x = Pell, y = Squares/active_time, color = Status)) +
geom_point() +
facet_wrap(~Species) +
theme_bw() +
geom_smooth(method = "lm")
Litt <- snail_move[snail_move$Species == "Littorina",]
Hydr <- snail_move[snail_move$Species == "Hydrobia",]
Barbar <- snail_move[snail_move$Barbarity == "Barbar",]
Domestic <- snail_move[snail_move$Barbarity == "domestic",]
Barbar_Litt <- Litt[Litt$Barbarity == "Barbar",]
Barbar_Hydr <- Hydr[Hydr$Barbarity == "Barbar",]
Domestic_Litt <- Litt[Litt$Barbarity == "domestic",]
Domestic_Hydr <- Hydr[Hydr$Barbarity == "domestic",]
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Domestic, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(Barbar_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Litt, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Barbar_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
ggplot(Domestic_Hydr, aes(y = Trek_lenght, x = Aperture_size, fill = Status)) + geom_point() + theme_bw() + geom_smooth(method = "lm")
one.way <- anova(Hydrobia ~ captured, data = snail_move)
one.way <- anova(Hydrobia ~ captured, data = snail_move)
library(broom)
library(clipr)
one.way <- anova(Hydrobia ~ captured, data = snail_move)
model_Angle_Increment_Hydr <- lm(Captred ~ Aperture_size * Status, data = snail_move)
model_Angle_Increment_Hydr <- lm(Captured ~ Aperture_size * Status, data = snail_move)
model_Angle_Increment_Hydr <- lm(Barbar ~ Aperture_size * Status, data = snail_move)
model_Angle_Increment_Hydr <- lm(Squares ~ Aperture_size * Status, data = snail_move)
summary(model_Angle_Increment_Hydr)
Bar <- snail_move[snail_move$Barbarity == "Barbar",]
Dome <- snail_move[snail_move$Barbarity == "domestic",]
View(Domestic)
ggplot(snail_move, aes(y = Turn_time, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Trek_lenght, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Sd, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
ggplot(snail_move, aes(y = Squares, x = Species, fill = Status)) + geom_boxplot() + theme_bw()
model_Turn_time_Species_Status <- lm(Turn_time ~ Species * Status, data = snail_move)
summary(model_Turn_time_Species_Status)
model_Turn_time_Species_Status <- anova(Turn_time ~ Species * Status, data = snail_move)
lm
model_Turn_time_Species_Status <- lm(Turn_time ~ Species * Status, data = snail_move)
summary(model_Turn_time_Species_Status)
model_Turn_time_Species_Status <- lm(Turn_time ~ Species * Status, data = snail_move)
summary(model_Turn_time_Species_Status)
model_Trek_lenght_Species_Status <- lm(Trek_lenght ~ Species * Status, data = snail_move)
summary(model_Trek_lenght_Species_Status)
model_Sd_Species_Status <- lm(Sd ~ Species * Status, data = snail_move)
summary(model_Sd_Species_Status)
model_Squares_Species_Status <- lm(Squares ~ Species * Status, data = snail_move)
summary(model_Squares_Species_Status)
model_Squares_Species_Status_Litt <- lm(Squares ~ Species * Status, data = Litt)
model_Squares_size_Status_Litt <- lm(Squares ~ Aperture_size * Status, data = Litt)
summary(model_Squares_Species_Status_Litt)
summary(model_Squares_size_Status_Litt)
model_Squares_size_Status_Hydr <- lm(Squares ~ Aperture_size * Status, data = Hydr)
summary(model_Squares_size_Status_Hydr)
Cf <- t.test(Captured ~ Free, data = snail_move)
Cf <- t.test(Captured ~ Free, data = snail_move)
Cf <- t.test(Domestic ~ Free, data = snail_move)
Cf <- t.test(Domestic ~ Litt, data = snail_move)
t.test(Domestic ~ Litt, data = snail_move)
t.test(Turn_time ~ Species, data = snail_move)
summary(Cf)
Cf <- t.test(Turn_time ~ Species, data = snail_move)
summary(Cf)
